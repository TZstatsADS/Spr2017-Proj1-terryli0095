View(dataset1)
source("https://gist.github.com/schaunwheeler/5825002/raw/3526a15b032c06392740e20b6c9a179add2cee49/xlsxToR.r")
dates.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InauguationDates.txt"
info.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InaugurationInfo.csv"
xlsxToR = function(info.path, header = TRUE)
View(xlsxToR)
info.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InaugurationInfo_csv"
inaug.info <- read.csv(info.path ,header = TRUE,fill = TRUE,skipNul = TRUE)
info.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InaugurationInfo_csv"
info.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InaugurationInfo_csv.csv"
inaug.info <- read.csv(info.path ,header = TRUE,fill = TRUE,skipNul = TRUE)
View(inaug.info)
inaug.dates <- read.table(dates.path ,header = TRUE,fill = TRUE)
View(inaug.dates)
inaug.dates <- read.table(dates.path ,header = TRUE,fill = FALSE)
inaug.dates <- read.table(dates.path ,header = FALSE,fill = TRUE)
View(inaug.dates)
dates.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InauguationDates_1.txt"
inaug.dates <- read.table(dates.path ,header = FALSE,fill = TRUE)
View(inaug.dates)
inaug.dates <- read.table(dates.path ,header = FALSE,fill = TRUE)
dates.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InauguationDates2.txt"
dates.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InauguationDates2.txt"
inaug.dates <- read.table(dates.path ,header = FALSE,fill = TRUE)
View(inaug.dates)
View(inaug.info)
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" or "Republican" )
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" | "Republican" )
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" | nfo$Party == "Republican" )
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" | info$Party == "Republican" )
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" | inaug.info$Party == "Republican" )
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic"  )
setwd("/Users/Terry/Documents/Project_1")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
ff.all<-Corpus(source)
model <- glm(Survived ~.,family=binomial(link='logit'),data=train)
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" | inaug.info$Party == "Republican" )
View(inaug.info.modern)
inaug.info.modern$indicator <- if inaug.info$Party == "Democratic" : 0
indicator <- function (x) {
if (x== "Democratic" )
return(0)
if (x== "Republican" )
return(1)
}
indicator(Republican)
indicator("Republican"")
indicator("Republican"")
indicator <- function (x) {
if (x== "Democratic" )
return(0)
if (x== "Republican" )
return(1)
}
indicator("Republican)
indicator("Republican")
indicator("Republican")
inaug.info.modern$indicator <-  indicator(inaug.info$Party)
View(inaug.info.modern)
inaug.info.modern$indicate <-indicator(inaug.info$Party)
indicator(inaug.info$Party)
inaug.info$Party
sapply(inaug.info$Party,indicator)
sapply(inaug.info$Party,indicator)
inaug.info.modern$indicate <-sapply(inaug.info$Party,indicator)
inaug.info.modern$indicate <- ifelse(inaug.info.modern$Party =="Democratic", 1,0)
View(inaug.info.modern)
model <- glm(inaug.info.modern$indicate ~ inaug.info.modern$Words,family=binomial(link='logit'),data=inaug.info.modern)
summary(inaug.info.modern)
model <- glm(inaug.info.modern$indicate ~ inaug.info.modern$Words,family=binomial(link='logit'),data=inaug.info.modern)
summary(inaug.info.modern)
summary(model)
model <- glm(inaug.info.modern$Words ~ inaug.info.modern$indicate,family=binomial(link='logit'),data=inaug.info.modern)
model <- glm(inaug.info.modern$Words ~ inaug.info.modern$indicate,family=binomial(link='logit'),data=inaug.info.modern)
summary(model)
model <- glm(inaug.info.modern$indicate ~ inaug.info.modern$Words,family=binomial(link='logit'),data=inaug.info.modern)
summary(model)
plot(model)
model <- glm(inaug.info.modern$Words ~ inaug.info.modern$indicate,family=binomial(link='logit'),data=inaug.info.modern)
plot(model)
model <- glm(inaug.info.modern$indicate ~ inaug.info.modern$Words,family=binomial(link='logit'),data=inaug.info.modern)
summary(model)
inaug.info.modern$indicate
inaug.info.modern$Words
inaug.info.modern$Words[1]
inaug.info.modern$Words[1]+2
model <- glm(inaug.info.modern$indicate ~ as.float(inaug.info.modern$Words),family=binomial(link='logit'),data=inaug.info.modern)
model <- glm(inaug.info.modern$indicate ~ as.numeric(inaug.info.modern$Words),family=binomial(link='logit'),data=inaug.info.modern)
plot(model)
summary(model)
get_sentiments("bing")
View(inaug.dates)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
ff.all<-Corpus(source)
ff.all <- tm_map(ff.all,
content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub='byte')),
mc.cores=1)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
ff.all <- tm_map(ff.all, toSpace, "-")
ff.all <- tm_map(ff.all, toSpace, ":")
ff.all <- tm_map(ff.all, toSpace, ", ")
ff.all <- tm_map(ff.all, toSpace, ". ")
ff.all <- tm_map(ff.all, removeNumbers)
ff.all <- tm_map(ff.all, removePunctuation)
ff.all <- tm_map(ff.all , stripWhitespace)
ff.all <- tm_map(ff.all, content_transformer(tolower))
ff.all<-tm_map(ff.all, removeWords, character(0))
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
#ff.all_stemmed<-tm_map(ff.all, removeWords, stopwords("english"))
#ff.all_stemmed <-  tm_map(ff.all_stemmed,stemDocument)
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.all<-as.matrix(TermDocumentMatrix(ff.all))
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
tdm.tidy_trump= filter(tdm.tidy, tdm.tidy$document == 'inaugDonaldJTrump-1.txt')
unique_speeches= unique(tdm.tidy$document)
length_summary= data.frame(unique_speeches)
length_summary$total_count=summarise (group_by(tdm.tidy, document),sum(count))[,2]
tdm.tidy$length = nchar(tdm.tidy$term) * tdm.tidy$count
length_summary$total_length = summarise (group_by(tdm.tidy, document),sum(length))[,2]
length_summary$avg_length = length_summary$total_length/length_summary$total_count
View(length_summary)
cities <- gsub("-", "", length_summary$unique_speeches)
cities
cities <- gsub("-1", "", length_summary$unique_speeches)
cities <- gsub("-1", "", length_summary$unique_speeches)
cities
Presidents <- substr(length_summary$unique_speeches,6,regexpr("-",x)-1)
Presidents <- substr(length_summary$unique_speeches,6,regexpr("-",length_summary$unique_speeches)-1)
Presidents
length_summary$avg_length$Presidents <- substr(length_summary$unique_speeches,6,regexpr("-",length_summary$unique_speeches)-1)
View(length_summary)
View(length_summary)
folder.path="....data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
speeches
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#load packages
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
#collect documents in corpus
ff.all<-Corpus(source)
ff.all <- tm_map(ff.all, toSpace, "-")
ff.all <- tm_map(ff.all, toSpace, ":")
ff.all <- tm_map(ff.all, toSpace, ", ")
ff.all <- tm_map(ff.all, toSpace, ". ")
ff.all <- tm_map(ff.all, removeNumbers)
ff.all <- tm_map(ff.all, removePunctuation)
ff.all <- tm_map(ff.all , stripWhitespace)
ff.all <- tm_map(ff.all, content_transformer(tolower))
ff.all<-tm_map(ff.all, removeWords, character(0))
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
ff.all<-tm_map(ff.all, PlainTextDocument)
#ff.all_stemmed<-tm_map(ff.all, removeWords, stopwords("english"))
#ff.all_stemmed <-  tm_map(ff.all_stemmed,stemDocument)
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.all<-as.matrix(TermDocumentMatrix(ff.all))
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale=c(5,0.5),
max.words=100,
min.freq=0,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#load packages
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
#collect documents in corpus
ff.all<-Corpus(source)
ff.all <- tm_map(ff.all, toSpace, "-")
ff.all <- tm_map(ff.all, toSpace, ":")
ff.all <- tm_map(ff.all, toSpace, ", ")
ff.all <- tm_map(ff.all, toSpace, ". ")
ff.all <- tm_map(ff.all, removeNumbers)
ff.all <- tm_map(ff.all, removePunctuation)
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
ff.all<-tm_map(ff.all, PlainTextDocument)
#ff.all_stemmed<-tm_map(ff.all, removeWords, stopwords("english"))
#ff.all_stemmed <-  tm_map(ff.all_stemmed,stemDocument)
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.all<-as.matrix(TermDocumentMatrix(ff.all))
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale=c(5,0.5),
max.words=100,
min.freq=0,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#load packages
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
#collect documents in corpus
ff.all<-Corpus(source)
ff.all <- tm_map(ff.all,
content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub='byte')),
mc.cores=1)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
ff.all <- tm_map(ff.all, toSpace, "-")
ff.all <- tm_map(ff.all, toSpace, ":")
ff.all <- tm_map(ff.all, toSpace, ", ")
ff.all <- tm_map(ff.all, toSpace, ". ")
ff.all <- tm_map(ff.all, removeNumbers)
ff.all <- tm_map(ff.all, removePunctuation)
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale=c(5,0.5),
max.words=100,
min.freq=0,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#load packages
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
#collect documents in corpus
ff.all<-Corpus(source)
#load dates info as well as party info
dates.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InauguationDates2.txt"
info.path <- "/Users/Terry/Documents/Project_1/data/InauguralSpeeches/InaugurationInfo_csv.csv"
inaug.dates <- read.table(dates.path ,header = FALSE,fill = TRUE)
inaug.info <- read.csv(info.path ,header = TRUE,fill = TRUE,skipNul = TRUE)
ff.all <- tm_map(ff.all,
content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub='byte')),
mc.cores=1)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
ff.all <- tm_map(ff.all, toSpace, "-")
ff.all <- tm_map(ff.all, toSpace, ":")
ff.all <- tm_map(ff.all, toSpace, ", ")
ff.all <- tm_map(ff.all, toSpace, ". ")
ff.all <- tm_map(ff.all, removeNumbers)
ff.all <- tm_map(ff.all, removePunctuation)
ff.all <- tm_map(ff.all , stripWhitespace)
ff.all <- tm_map(ff.all, content_transformer(tolower))
ff.all<-tm_map(ff.all, removeWords, character(0))
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
#ff.all_stemmed<-tm_map(ff.all, removeWords, stopwords("english"))
#ff.all_stemmed <-  tm_map(ff.all_stemmed,stemDocument)
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.all<-as.matrix(TermDocumentMatrix(ff.all))
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
tdm.tidy_trump= filter(tdm.tidy, tdm.tidy$document == 'inaugDonaldJTrump-1.txt')
unique_speeches= unique(tdm.tidy$document)
length_summary= data.frame(unique_speeches)
length_summary$words_reduced=summarise (group_by(tdm.tidy, document),sum(count))[,2]
tdm.tidy$length = nchar(tdm.tidy$term) * tdm.tidy$count
length_summary$chr_length = summarise (group_by(tdm.tidy, document),sum(length))[,2]
length_summary$avg_length = length_summary$chr_length/length_summary$words_reduced
length_summary$avg_length$Presidents <- substr(length_summary$unique_speeches,6,regexpr("-",length_summary$unique_speeches)-1)
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale=c(5,0.5),
max.words=100,
min.freq=0,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
View(tdm.overall)
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
tdm.all<-TermDocumentMatrix(ff.all)
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
# check packages that need to be installed.
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
# install additional packages
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
#load packages
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="/Users/Terry/Documents/Project_1/data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
prex.out=substr(speeches, 6, nchar(speeches)-4)
source <- DirSource(folder.path) #set up a source for text documents
#collect documents in corpus
ff.all<-Corpus(source)
ff.all <- tm_map(ff.all,
content_transformer(function(x) iconv(x, to='UTF-8-MAC', sub='byte')),
mc.cores=1)
toSpace <- content_transformer(function (x , pattern ) gsub(pattern, " ", x))
ff.all<-tm_map(ff.all, removeWords, stopwords("english"))
tdm.all<-TermDocumentMatrix(ff.all)
tdm.tidy=tidy(tdm.all)
tdm.overall=summarise(group_by(tdm.tidy, term), sum(count))
wordcloud(tdm.overall$term, tdm.overall$`sum(count)`,
scale=c(5,0.5),
max.words=100,
min.freq=0,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9,"Blues"))
tdm.tidy_trump= filter(tdm.tidy, tdm.tidy$document == 'inaugDonaldJTrump-1.txt')
unique_speeches= unique(tdm.tidy$document)
length_summary= data.frame(unique_speeches)
length_summary$words_reduced=summarise (group_by(tdm.tidy, document),sum(count))[,2]
tdm.tidy$length = nchar(tdm.tidy$term) * tdm.tidy$count
length_summary$chr_length = summarise (group_by(tdm.tidy, document),sum(length))[,2]
length_summary$avg_length = length_summary$chr_length/length_summary$words_reduced
length_summary$Presidents <- substr(length_summary$unique_speeches,6,regexpr("-",length_summary$unique_speeches)-1)
View(length_summary)
View(inaug.info.modern)
tdm.tidy_trump= filter(tdm.tidy, tdm.tidy$document == 'inaugDonaldJTrump-1.txt')
unique_speeches= unique(tdm.tidy$document)
length_summary= data.frame(unique_speeches)
length_summary$words_reduced=summarise (group_by(tdm.tidy, document),sum(count))[,2]
tdm.tidy$length = nchar(tdm.tidy$term) * tdm.tidy$count
length_summary$chr_length = summarise (group_by(tdm.tidy, document),sum(length))[,2]
length_summary$avg_length = length_summary$chr_length/length_summary$words_reduced
length_summary$File <- substr(length_summary$unique_speeches,6,regexpr("-",length_summary$unique_speeches)-1)
merge(x = inaug.info.modern, y = length_summary, by = inaug.info.modern$President, all.x = TRUE)
merge(x = inaug.info.modern, y = length_summary, by = inaug.info.modern$File, all.x = TRUE)
merge(x = inaug.info.modern, y = length_summary, by = File, all.x = TRUE)
merge(x = inaug.info.modern, y = length_summary, by = "File", all.x = TRUE)
merge(x = inaug.info.modern, y = length_summary, by = "File", all.x = TRUE)
inaug.info.modern<- merge(x = inaug.info.modern, y = length_summary, by = "File", all.x = TRUE)
View(inaug.info.modern)
View(length_summary)
length_summary<-length_summary[!(is.na(length_summary$File) | length_summary$File==""), ]
View(length_summary)
inaug.info.modern<- merge(x = inaug.info.modern, y = length_summary, by = "File", all.x = TRUE)
inaug.info.modern<-left_join(inaug.info.modern, length_summary)
View(inaug.info.modern)
inaug.info.modern$File <-substr(inaug.info.modern$File,1,regexpr("-",inaug.info.modern$File)-1)
View(inaug.info.modern)
inaug.info.modern$File <- paste0(inaug.info.modern$File,"-")
inaug.info.modern$File <- paste0(inaug.info.modern$File,"-")
View(inaug.info.modern)
inaug.info.modern <- filter(inaug.info,inaug.info$Party == "Democratic" | inaug.info$Party == "Republican" )
inaug.info.modern$File <- paste0(inaug.info.modern$File,"-")
View(inaug.info.modern)
inaug.info.modern$File <-substr(inaug.info.modern$File,1,regexpr("-",inaug.info.modern$File)-1)
View(inaug.info.modern)
View(inaug.info.modern)
inaug.info.modern<-left_join(inaug.info.modern, length_summary)
inaug.info.modern$indicate <- ifelse(inaug.info.modern$Party =="Democratic", 1,0)
View(inaug.info.modern)
model_word_count <- glm(inaug.info.modern$indicate ~ as.numeric(inaug.info.modern$Words),family=binomial(link='logit'),data=inaug.info.modern)
model_word_count <- glm(inaug.info.modern$indicate ~ as.numeric(inaug.info.modern$Words),family=binomial(link='logit'),data=inaug.info.modern)
model_reduced_word_count<-glm(inaug.info.modern$indicate ~ as.numeric(inaug.info.modern$words_reduced),family=binomial(link='logit'),data=inaug.info.modern)
View(inaug.info.modern)
model_avg_word_length<-glm(inaug.info.modern$indicate ~ as.numeric(inaug.info.modern$avg_length),family=binomial(link='logit'),data=inaug.info.modern)
model_avg_word_length<-glm(inaug.info.modern$indicate ~ inaug.info.modern$avg_length,family=binomial(link='logit'),data=inaug.info.modern)
inaug.info.modern$avg_length
typeof(inaug.info.modern$avg_length[1])
typeof(as.numeric(inaug.info.modern$avg_length[1]))
typeof(as.numeric(inaug.info.modern$avg_length[1]))
model_avg_word_length<-glm(inaug.info.modern$indicate ~ as.numeric(unlist(inaug.info.modern$avg_length)),family=binomial(link='logit'),data=inaug.info.modern)
model_reduced_word_count<-glm(inaug.info.modern$indicate ~ as.numeric(unlist(inaug.info.modern$words_reduced)),family=binomial(link='logit'),data=inaug.info.modern)
model_avg_word_length
model_reduced_word_count
print("logistic regression done with total word count as predictor variable and the party as indicator variable")
print(model_word_count)
print("logistic regression done with word count (after removing stop words from library) as predictor variable and the party as indicator variable")
print(model_reduced_word_count)
print("logistic regression done with average word length for each word as predictor variable and the party as indicator variable")
print(model_avg_word_length)
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
list.files()
getwd()
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
getwd()
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
getwd()
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
getwd()
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
setwd("/Users/Terry/Documents/ADS_Project_1/Spr2017-Proj1-terryli0095/doc")
getwd()
packages.used=c("tm", "wordcloud", "RColorBrewer",
"dplyr", "tidytext")
packages.needed=setdiff(packages.used,
intersect(installed.packages()[,1],
packages.used))
if(length(packages.needed)>0){
install.packages(packages.needed, dependencies = TRUE,
repos='http://cran.us.r-project.org')
}
library(tm)
library(wordcloud)
library(RColorBrewer)
library(dplyr)
library(tidytext)
folder.path="../data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
speeches
folder.path="./data/InauguralSpeeches/"
speeches=list.files(path = folder.path, pattern = "*.txt")
speeches
